# Copyright 2021 Teak.io, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: 2.1

orbs:
  teak: teak/sdk-utils@0.5
  slack: circleci/slack@4

parameters:
  run-apply:
    type: boolean
    default: false
  continuation-cache-id:
    type: string
    default: ""
  workspace:
    type: string
    default: ""
  plan-log-url:
    type: string
    default: ""
  region:
    type: string
    default: "us-east-1"
  build_account_slug:
    type: string
    default: ""

references:
  packer-build: &packer-build
    version: 1.7.5-dev2
    github_releases_user: AlexSc
    gpg_key_id: EC3A3F7C6C4F9D25
    name: "Generate Images (<< pipeline.parameters.build_account_slug >>)"
    pre-steps:
      - run:
          command: sudo apt-get update && sudo apt-get install -y ansible awscli jq
      - run:
          command: |
            ip=$(curl -s https://api.ipify.org)
            echo "My public IP address is: $ip"
    post-steps:
      - store_artifacts:
          path: "manifests/"
      - store_artifacts:
          path: "raw_manifests/"
      - run:
          name: "Rebuild dependents"
          command: |
            export AWS_DEFAULT_REGION=<< pipeline.parameters.region >>
            PREFIX=$(aws ssm get-parameter --name /omat/account_registry/<< pipeline.parameters.build_account_slug >> --output text --query Parameter.Value | jq -r '.prefix')
            DEPENDENTS=$(aws ssm get-parameters-by-path --path ${PREFIX}/config/image_factories/root/dependents --recursive --query 'Parameters[*].Value')
            API_CALLS=$(echo $DEPENDENTS |  jq -r 'map(fromjson) | map({url: "https://circleci.com/api/v2/project/\(.project_slug)/pipeline", data: ({branch: .branch, parameters: {in_build_account_slug: .build_account, in_deploy_account_slug: (.deploy_account // "")}} | tojson | @sh)}) | map("curl -XPOST --data \(.data) -H \"Content-Type: application/json\" -H \("Circle-Token: \($ENV.CIRCLE_TOKEN)" | @sh) \(.url)") | join("\n")')
            IFS=$'\n' API_CALLS=($(echo $API_CALLS))
            for api_call in $API_CALLS; do
              echo $api_call
              eval $api_call
            done
    path: "packer"
    var: "region=<< pipeline.parameters.region >>,build_account_canonical_slug=<< pipeline.parameters.build_account_slug >>,cost_center=root_image"
    context:
      - AWS-Write
      - Vagrant
      - CircleCI

workflows:
  version: 2
  apply-and-build:
    when: << pipeline.parameters.run-apply >>
    jobs:
      - teak/terraform-slack-on-hold:
          plan-log-url: << pipeline.parameters.plan-log-url >>
          context:
            - Slack
      - hold:
          name: "Human, your approval is required (<< pipeline.parameters.workspace >>)"
          type: approval
          requires:
            - teak/terraform-slack-on-hold
      - teak/terraform-apply:
          version: 1.1.7
          name: "Apply (<< pipeline.parameters.workspace >>)"
          continuation_cache: << pipeline.parameters.continuation-cache-id >>
          path: "terraform"
          workspace: << pipeline.parameters.workspace >>
          context: AWS-Write
          requires:
            - "Human, your approval is required (<< pipeline.parameters.workspace >>)"
      - teak/packer-build:
          <<: *packer-build
          requires:
            - "Apply (<< pipeline.parameters.workspace >>)"
  build-only:
    when:
      not: << pipeline.parameters.run-apply >>
    jobs:
      - teak/packer-build:
          <<: *packer-build
